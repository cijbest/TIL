tt1 <- rowSums(sh[,c(4:7)], na.rm=T)
tt1
ls(sh)
sh <- read.csv("shop.txt",
header = T,
stringsAsFactors=F,
fileEncoding="UTF-8"
)
sh
install.packages("dplyr")
library(dplyr)
sh <- read.csv("shop.txt",
header = T,
stringsAsFactors=F,
fileEncoding="UTF-8"
)
rename(sh,TX_ID)
install.packages("dplyr")
install.packages("dplyr")
rename(sh,TX_ID)
install.packages("dplyr")
rename(sh,TX_ID)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
sh <- read.csv("shop.txt",
header = T,
stringsAsFactors=F,
fileEncoding="UTF-8"
)
rename(sh,TX_ID)
library(dplyr)
sh <- read.csv("shop.txt",
header = T,
stringsAsFactors=F,
fileEncoding="UTF-8"
)
rename(sh,TX_ID)
install.packages("dplyr")
library(dplyr)
sh <- read.csv("shop.txt",
header = T,
stringsAsFactors=F,
fileEncoding="UTF-8"
)
rename(sh,TX_ID)
library(dplyr)
install.packages("Rcpp")
library(dplyr)
sh
rename(sh,ID=TX_ID,NAME=TX_NAME)
rename(sh,ID=TX_ID,NAME=TX_NM, AGE=TX_A, TEMP=TX_T, PRICE=TX_P,QT=TX_Q)
library(dplyr)
sh <- read.csv("shop2.txt",
header = T,
stringsAsFactors=F,
fileEncoding="UTF-8"
)
rename(sh,ID=TX_ID,NAME=TX_NM, AGE=TX_A, TEMP=TX_T, PRICE=TX_P,QT=TX_Q)
rename(sh,ID=TX_ID,NAME=TX_NM, AGE=TX_A, TEMP=TX_T, PRICE=TX_P,QT=TX_Q)
library(dplyr)
sh <- read.csv("shop2.txt",
header = T,
stringsAsFactors=F,
fileEncoding="UTF-8"
)
SH <- rename(sh,ID=TX_ID,NAME=TX_NM, AGE=TX_A, TEMP=TX_T, PRICE=TX_P,QT=TX_Q)
library(dplyr)
sh <- read.csv("shop.txt",
header = T,
stringsAsFactors=F,
fileEncoding="UTF-8"
)
SH <- rename(sh,ID=TX_ID,NAME=TX_NM, AGE=TX_A, TEMP=TX_T, PRICE=TX_P,QT=TX_Q)
library(dplyr)
sh <- read.csv("shop.txt",
header = T,
stringsAsFactors=F,
fileEncoding="UTF-8"
)
sh <- rename(sh,ID=TX_ID,NAME=TX_NM, AGE=TX_A, TEMP=TX_T, PRICE=TX_P,QT=TX_Q)
sh
sh$AGE_NY <- ifelse(AGE >= 50,"Y","N")
sh$AGE_NY <- ifelse(sh$AGE >= 50,"Y","N")
sh
sh$AGE_NY <- ifelse(sh$AGE >= 25,"Y","N")
sh
library(dplyr)
sh <- read.csv("shop.txt",
header = T,
stringsAsFactors=F,
fileEncoding="UTF-8"
)
sh <- rename(sh,ID=TX_ID,NAME=TX_NM, AGE=TX_A, TEMP=TX_T, PRICE=TX_P,QT=TX_Q)
sh$AGE_HL <- ifelse(sh$AGE >= 30,"H",
ifelse(sh$AGE >= 25,"M",
ifelse(sh$AGE >= 20,"L","F")
)
)
sh
sh$GRADE <- ifelse(sh$PRICE*sh$QT <= 100000,"G",
ifelse(sh$PRICE*sh$QT <= 10000,"B",
ifelse(sh$PRICE*sh$QT <= 30000,"S","F")))
sh
sh$GRADE <- ifelse(sh$PRICE*sh$QT <= 10000,"B",
ifelse(sh$PRICE*sh$QT <= 30000,"S",
ifelse(sh$PRICE*sh$QT <= 100000,"G","F")))
sh
library(dplyr)
sh <- read.csv("shop2.txt",
header = T,
stringsAsFactors=F,
fileEncoding="UTF-8"
)
sh <- rename(sh,ID=TX_ID,NAME=TX_NM, AGE=TX_A, TEMP=TX_T, PRICE=TX_P,QT=TX_Q)
sh$AGE_HL <- ifelse(sh$AGE >= 30,"H",
ifelse(sh$AGE >= 25,"M",
ifelse(sh$AGE >= 20,"L","F")
)
)
# 총 구매 금액이 (PRICE*QT)
# 10000 이하면 "B"
# 30000 이하면 "S"
# 100000 이하면 "G"
#를 GRADE 컴럼으로 만드시오.
sh$GRADE <- ifelse(sh$PRICE*sh$QT <= 10000,"B",
ifelse(sh$PRICE*sh$QT <= 30000,"S",
ifelse(sh$PRICE*sh$QT <= 100000,"G","F")))
sh
library(dplyr)
sh <- read.csv("shop3.txt",
header = T,
stringsAsFactors=F,
fileEncoding="UTF-8"
)
sh <- rename(sh,ID=TX_ID,NAME=TX_NM, AGE=TX_A, TEMP=TX_T, PRICE=TX_P,QT=TX_Q)
sh$AGE_HL <- ifelse(sh$AGE >= 30,"H",
ifelse(sh$AGE >= 25,"M",
ifelse(sh$AGE >= 20,"L","F")
)
)
sh
library(dplyr)
sh <- read.csv("shop3.txt",
header = T,
stringsAsFactors=F,
fileEncoding="UTF-8"
)
sh <- rename(sh,ID=TX_ID,NAME=TX_NM, AGE=TX_A, TEMP=TX_T, PRICE=TX_P,QT=TX_Q)
sh$AGE_HL <- ifelse(sh$AGE >= 30,"H",
ifelse(sh$AGE >= 25,"M",
ifelse(sh$AGE >= 20,"L","F")
)
)
# 총 구매 금액이 (PRICE*QT)
# 10000 이하면 "B"
# 30000 이하면 "S"
# 100000 이하면 "G"
#를 GRADE 컴럼으로 만드시오.
sh$GRADE <- ifelse(sh$PRICE*sh$QT <= 10000,"B",
ifelse(sh$PRICE*sh$QT <= 30000,"S",
ifelse(sh$PRICE*sh$QT <= 100000,"G","F")))
sh
str(sh)
dim(sh)
ls(sh)
sh %>% select(ID)
sh %>% select(ID,AGE)
sh2 <- sh %>% select(ID,AGE)
sh2
sh2 <- sh %>% select(ID,AGE,GRADE)
sh2
sh2 <- sh %>% select(-ID,-AGE,-GRADE)
sh
sh2
sh3 <- sh %>% filter(GRADE == 'G')
sh3
mean(sh3$PRICE * sh3$QT)
sh3 <- sh %>% filter(GRADE == 'G' & AGE_HL == "M")
sh3
sh4 <- sh %>% arrange(AGE)
sh4
sh4 <- sh %>% arrange(desc(AGE),MM)
sh4
sh4 <- sh %>% arrange(AGE)
sh4
smr <- sh %>% summarise(TOT = sum(PRICE))
smr
smr <- sh %>% summarise(TOT = sum(PRICE), AGES = mean(AGE))
smr
smr2 <- sh %>% group_by(NAME) %>% summarise(TOTAVG = mean(PRICE*QT))
smr2 <- sh %>% group_by(NAME) %>% summarise(TOTAVG = mean(PRICE*QT))
smr2
smr3 <- as.data.frame(smr2)
smr3
install.packages("readxl")
library(readxl)
y16 <- read_excel("y16.xls")
y17 <- read_excel("y17.xls")
y16 <- read_excel("y16.xls")
y16
library(readxl)
y16 <- read_excel("y16.xlsx")
y17 <- read_excel("y17.xlsx")
y16
y17
library(readxl)
y16 <- as.read_excel("y16.xlsx")
y17 <- as.read_excel("y17.xlsx")
library(readxl)
y16 <- as.data.frame(read_excel("y16.xlsx"))
y17 <- as.data.frame(read_excel("y17.xlsx"))
y16
y17
bind_col <- left_join(y17, history, y16, by="10")
bind_col <- left_join(y17,y16, by="10")
bind_col <- left_join(y17,y16, by="10")
r1 <- left_join(y16,y17, by="ID")
r2 <- left_join(y17,y16, by="ID")
r1
r2
r3 <- inner_join(y16,y17, by="ID")
r4 <- full_join(y17,y16,by="ID")
r3
r4
y16
y16$SUM_AMT <- rowSums(y16[,c(2:3)])
y16
y17
y16
remove("SUM_AMT")
# 16,17년 결재 금액의 합과 건수의 합을 테이블에 추가하시오.
#SUM_AMT, SUM_CNT
# 위의 데이터를 기준으로지역별 사용량의 평균을 구하시오.
remove(y16["SUM_AMT"])
remove(y16["SUM_AMT"])
remove(y16$SUM_AMT)
y16 <- as.data.frame(read_excel("y16.xlsx"))
y16
r3
r3$SUM_AMT <- rowSums(r3[,c(2,7)])
r3
r3$SUM_CNT <- rowSums(r3[,c(3,8)])
r3
r4
r4$SUM_AMT <- rowSums(r4[,c(2,7)], na.rm=T)
r4$SUM_CNT <- rowSums(r4[,c(3,8)], na.rm=T)
r4$SUM_AMT <- rowSums(r4[,c(5,7)], na.rm=T)
r4$SUM_CNT <- rowSums(r4[,c(6,8)], na.rm=T)
r4
r4$SUM_AMT <- rowSums(r4 %>% select(AMT17,!MT16), na.rm=T)
r4 <- full_join(y17,y16,by="ID")
r4$SUM_AMT <- rowSums(r4 %>% select(AMT17,!MT16), na.rm=T)
r4$SUM_AMT <- rowSums(r4 %>% select(AMT17,AMT16), na.rm=T)
r4$SUM_CNT <- rowSums(r4 %>% select(Y17_CNT,Y16_CNT), na.rm=T)
r4
smr <- 4 %>% summarise(AVG_AMT = sum(SUM_AMT), AVG_CNT = sum(SUM_CNT))
smr <- r4 %>% summarise(AVG_AMT = sum(SUM_AMT), AVG_CNT = sum(SUM_CNT))
smr
smr <- r4 %>% summarise(AVG_AMT = mean(SUM_AMT), AVG_CNT = mean(SUM_CNT))
smr
) %>% summarise(AVG_AMT = mean(SUM_AMT), AVG_CNT = mean(SUM_CNT))
smr <- r4 %>% group_by(AREA) %>% summarise(AVG_AMT = mean(SUM_AMT), AVG_CNT = mean(SUM_CNT))
smr
smr <- as.data.frame(r4 %>% group_by(AREA) %>% summarise(AVG_AMT = mean(SUM_AMT), AVG_CNT = mean(SUM_CNT)))
smr
r4
smr
r4 <- as.data.frame(r4 %>% group_by(AREA) %>% summarise(AVG_AMT = mean(SUM_AMT), AVG_CNT = mean(SUM_CNT)))
r4
r4$AREA <- ifelse(is.na(r4$AREA), 'NONE', r4$AREA)
r4
r4 <- r4 %>% arrange(AVG_AMT, AVG_CNT)
r4
r4 <- r4 %>% arrange(desc(AVG_AMT), desc(AVG_CNT))
r4
r4 <- r4 %>% arrange(desc(AVG_AMT))
r4
install.packages("psych")
describe(r4)
describe(r4)
library(psych)
describe(r4)
install.packages("descr")
library(descr)
r5 <- full_join(y17,y16,by="ID")
library(readxl)
y16 <- as.data.frame(read_excel("y16.xlsx"))
y17 <- as.data.frame(read_excel("y17.xlsx"))
r1 <- left_join(y16,y17, by="ID")
r2 <- left_join(y17,y16, by="ID")
r3 <- inner_join(y16,y17, by="ID")
r4 <- full_join(y17,y16,by="ID")
r5 <- full_join(y17,y16,by="ID")
# 16,17년 결재 금액의 합과 건수의 합을 테이블에 추가하시오.
#SUM_AMT, SUM_CNT
# 위의 데이터를 기준으로 지역별 사용량의 평균을 구하시오.
r4$SUM_AMT <- rowSums(r4 %>% select(AMT17,AMT16), na.rm=T)
r4$SUM_CNT <- rowSums(r4 %>% select(Y17_CNT,Y16_CNT), na.rm=T)
r4 <- as.data.frame(r4 %>% group_by(AREA) %>% summarise(AVG_AMT = mean(SUM_AMT), AVG_CNT = mean(SUM_CNT)))
r4$AREA <- ifelse(is.na(r4$AREA), 'NONE', r4$AREA)
r4 <- r4 %>% arrange(desc(AVG_AMT))
library(psych)
describe(r4)
library(descr)
fq <- freq(r5$AREA)
fq
r5 <- r3
library(readxl)
y16 <- as.data.frame(read_excel("y16.xlsx"))
y17 <- as.data.frame(read_excel("y17.xlsx"))
r1 <- left_join(y16,y17, by="ID")
r2 <- left_join(y17,y16, by="ID")
r3 <- inner_join(y16,y17, by="ID")
r4 <- full_join(y17,y16,by="ID")
r5 <- r3
# 16,17년 결재 금액의 합과 건수의 합을 테이블에 추가하시오.
#SUM_AMT, SUM_CNT
# 위의 데이터를 기준으로 지역별 사용량의 평균을 구하시오.
r4$SUM_AMT <- rowSums(r4 %>% select(AMT17,AMT16), na.rm=T)
r4$SUM_CNT <- rowSums(r4 %>% select(Y17_CNT,Y16_CNT), na.rm=T)
r4 <- as.data.frame(r4 %>% group_by(AREA) %>% summarise(AVG_AMT = mean(SUM_AMT), AVG_CNT = mean(SUM_CNT)))
r4$AREA <- ifelse(is.na(r4$AREA), 'NONE', r4$AREA)
r4 <- r4 %>% arrange(desc(AVG_AMT))
library(psych)
describe(r4)
library(descr)
fq <- freq(r5$AREA)
fq
fq
fq <- freq(r5$AREA,plot=F)
fq
fq <- freq(r5$AREA,plot=T)
fq
describe(r4)
fq <- freq(r5$AREA,plot=T)
fq
hist(r4$AREA)
hist(r4$AVG_AMT)
hist(r4$AVG_CNT)
r4
fq <- freq(r5$AREA,plot=F)
fq
fq <- freq(r5$AREA,plot=T)
hist(r4$AVG_CNT)
hist(r5$AVG)
hist(r5$AGE)
boxplot(r5$AGE)
mid <- as.data.frame(read_excel("mid_exam.xlsx"))
fin <- as.data.frame(read_excel("final_exam.xlsx"))
mid
fin
mid_exam <- as.data.frame(read_excel("mid_exam.xlsx"))
rename(MATH=MATH_MID, ENG=MID_ENG)
rename(mid_exam,MATH=MATH_MID, ENG=MID_ENG)
mid_exam
mid_exam <- rename(mid_exam,MATH=MATH_MID, ENG=MID_ENG)
library(dplyr)
mid_exam <- as.data.frame(read_excel("mid_exam.xlsx"))
mid_exam <- rename(mid_exam,MATH=MATH_MID, ENG=MID_ENG)
mid_exam <- rename(mid_exam,MATH=MATH_MID,ENG=MID_ENG)
mid_exam <- rename(mid_exam,MID_MATH=MATH,MID_ENG=ENG)
mid_exam <- rename(mid_exam,MATH=MATH_MID,ENG=MID_ENG)
sh
sh <- rename(sh,ID=TX_ID,NAME=TX_NM, AGE=TX_A, TEMP=TX_T, PRICE=TX_P,QT=TX_Q)
library(dplyr)
mid_exam <- rename(mid_exam,MATH=MATH_MID,ENG=MID_ENG)
mid_exam
mid_exam <- rename(mid_exam,MATH=MATH_MID,ENG=ENG_MID)
final_exam <- rename(final_exam,MATH=MATH_MID,ENG=ENG_MID)
final_exam <- as.data.frame(read_excel("final_exam.xlsx"))
final_exam <- rename(final_exam,MATH=MATH_MID,ENG=ENG_MID)
mid_exam
mid_exam <- as.data.frame(read_excel("mid_exam.xlsx"))
mid_exam <- rename(mid_exam,MATH=MATH_MID,ENG=ENG_MID)
final_exam <- as.data.frame(read_excel("final_exam.xlsx"))
final_exam <- rename(final_exam,MATH=MATH_MID,ENG=ENG_MID)
final_exam
mid_exam
mid_exam <- rename(mid_exam,MATH=MATH_MID,ENG=ENG_MID)
mid_exam
rename(mid_exam,MATH=MATH_MID,ENG=ENG_MID)
mid_exam <- as.data.frame(read_excel("mid_exam.xlsx"))
mid_exam <- rename(mid_exam,MATH=MATH_MID,ENG=ENG_MID)
mid_exam
library(dplyr)
mid_exam <- as.data.frame(read_excel("mid_exam.xlsx"))
mid_exam <- rename(mid_exam,MATH=MATH_MID,ENG=ENG_MID)
#1
library(dplyr)
mid_exam <- as.data.frame(read_excel("mid_exam.xlsx"))
mid_exam <- rename(mid_exam,MATH=MATH_MID,ENG=ENG_MID)
#2
final_exam <- as.data.frame(read_excel("final_exam.xlsx"))
final_exam <- rename(final_exam,MATH=MATH_MID,ENG=ENG_MID)
mid_exam
final_exam
sh
mid_exam
final_exam
rename(final_exam,MATH=MATH_MID,ENG=ENG_MID)
final_exam <- rename(final_exam, MATH=MATH_MID, ENG=ENG_MID)
final_exam <- rename(final_exam, MATH_MID=MATH, ENG_MID=ENG)
final_exam
#1
library(dplyr)
mid_exam <- as.data.frame(read_excel("mid_exam.xlsx"))
mid_exam <- rename(mid_exam,MATH_MID=MATH,ENG_MID=ENG)
#2
final_exam <- as.data.frame(read_excel("final_exam.xlsx"))
final_exam <- rename(final_exam, MATH_MID=MATH, ENG_MID=ENG)
#3
total_exam <- full_join(mid_exam,final_exam, by="ID")
mid_exam
total_exam
total_exam$MATH_AVG <- rowSums(total_exam %>% mean(MATH_MID.x,MATH_MID.y), na.rm=T)
total_exam$MATH_AVG <- rowMeans(total_exam %>% select(MATH_MID.x,MATH_MID.y), na.rm=T)
total_exam
total_exam$ENG_AVG <- rowMeans(total_exam %>% select(ENG_MID.x,ENG_MID.y), na.rm=T)
total_exam
total_exam$TOTAL_AVG <- ifelse(total_exam$MATH_AVG == "NA", "NONE",
ifelse(total_exam$ENG_AVG == "NA", "NONE",
rowMeans(total_exam %>% select(MATH_AVG, ENG_AVG))
)
)
total_exam
total_exam$TOTAL_AVG <- ifelse(total_exam$MATH_AVG == "NA", "NONE",
ifelse(total_exam$ENG_AVG == "NA", "NONE",
rowMeans(total_exam %>% select(MATH_AVG, ENG_AVG), na.rm=T)
)
total_exam
total_exam$TOTAL_AVG <- ifelse(total_exam$MATH_AVG == "NA", "NONE",
ifelse(total_exam$ENG_AVG == "NA", "NONE",
rowMeans(total_exam %>% select(MATH_AVG, ENG_AVG), na.rm=T)
)
)
total_exam
total_exam$MATH_AVG <- rowMeans(total_exam %>% select(MATH_MID.x,MATH_MID.y))
total_exam$ENG_AVG <- rowMeans(total_exam %>% select(ENG_MID.x,ENG_MID.y))
total_exam$TOTAL_AVG <- ifelse(total_exam$MATH_AVG == "NA", "NONE",
ifelse(total_exam$ENG_AVG == "NA", "NONE",
rowMeans(total_exam %>% select(MATH_AVG, ENG_AVG), na.rm=T)
)
)
total_exam
total_exam$MATH_AVG <- rowMeans(total_exam %>% select(MATH_MID.x,MATH_MID.y), na.rm=T)
total_exam$ENG_AVG <- rowMeans(total_exam %>% select(ENG_MID.x,ENG_MID.y), na.rm=T)
#1
library(dplyr)
mid_exam <- as.data.frame(read_excel("mid_exam.xlsx"))
mid_exam <- rename(mid_exam,MATH_MID=MATH,ENG_MID=ENG)
#2
final_exam <- as.data.frame(read_excel("final_exam.xlsx"))
final_exam <- rename(final_exam, MATH_MID=MATH, ENG_MID=ENG)
#3
total_exam <- full_join(mid_exam,final_exam, by="ID")
#4
total_exam$MATH_AVG <- rowMeans(total_exam %>% select(MATH_MID.x,MATH_MID.y), na.rm=T)
total_exam$ENG_AVG <- rowMeans(total_exam %>% select(ENG_MID.x,ENG_MID.y), na.rm=T)
#5
total_exam <- total_exam %>% filter(MATH_MID.x != "NA" && MATH_MID.y != "NA" && ENG_MID.x != "NA" && ENG_MID.y != "NA")
total_exam
total_exam <- total_exam %>% filter(MATH_MID.x != "NA" && MATH_MID.y != "NA" && ENG_MID.x != "NA" && ENG_MID.y != "NA")
total_exam
total_exam <- total_exam %>% filter(MATH_MID.x != "NA" & MATH_MID.y != "NA" & ENG_MID.x != "NA" & ENG_MID.y != "NA")
total_exam
total_exam$TOTAL_AVG <- rowMeans(total_exam %>% select(MATH_AVG, ENG_AVG), na.rm=T)
total_exam
smr <- total_exam %>% summarise(CLASS_MATH_AVG=mean(MATH_AVG), CLASS_ENG_AVG=mean(ENG_AVG))
smr
#1
library(dplyr)
mid_exam <- as.data.frame(read_excel("mid_exam.xlsx"))
mid_exam <- rename(mid_exam,MATH_MID=MATH,ENG_MID=ENG)
#2
final_exam <- as.data.frame(read_excel("final_exam.xlsx"))
final_exam <- rename(final_exam, MATH_FINAL=MATH, ENG_FINAL=ENG)
#3
total_exam <- full_join(mid_exam,final_exam, by="ID")
total_exam
smr2 <- total_exam %>% filter(MATH_MID >= 80 & ENG_MID >= 90)
smr2
smr2 <- total_exam %>% filter(MATH_MID >= 80 & ENG_MID >= 90)
smr2 <- smr2 %>% select("ID")
smr2
smr2 %>% select("ID")
smr2 <- total_exam %>% filter(MATH_MID >= 80 & ENG_MID >= 90)
smr2 %>% select("ID")
total_exam %>% filter(MATH_MID >= 80 & ENG_MID >= 90)
total_exam
#1
library(dplyr)
mid_exam <- as.data.frame(read_excel("mid_exam.xlsx"))
mid_exam <- rename(mid_exam,MATH_MID=MATH,ENG_MID=ENG)
#2
final_exam <- as.data.frame(read_excel("final_exam.xlsx"))
final_exam <- rename(final_exam, MATH_FINAL=MATH, ENG_FINAL=ENG)
#3
total_exam <- full_join(mid_exam,final_exam, by="ID")
#4
total_exam$MATH_AVG <- rowMeans(total_exam %>% select(MATH_MID,MATH_FINAL), na.rm=T)
total_exam$ENG_AVG <- rowMeans(total_exam %>% select(ENG_MID,ENG_FINAL), na.rm=T)
#5
total_exam <- total_exam %>% filter(MATH_MID != "NA" & MATH_FINAL != "NA" & ENG_MID != "NA" & ENG_FINAL != "NA")
total_exam$TOTAL_AVG <- rowMeans(total_exam %>% select(MATH_AVG, ENG_AVG), na.rm=T)
#6
smr <- total_exam %>% summarise(CLASS_MATH_AVG=mean(MATH_AVG), CLASS_ENG_AVG=mean(ENG_AVG))
#7
smr2 <- total_exam %>% filter(MATH_MID >= 80 & ENG_MID >= 90)
smr2 %>% select("ID")
total_exam
boxplot(total_exam$MATH_AVG, total_exam$ENG_AVG)
